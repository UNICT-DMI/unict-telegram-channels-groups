{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","pages/TopNavbar.tsx","pages/Channels/channelsNames.ts","pages/Cards/ChannelsCards.tsx","pages/Channels/Channels.tsx","pages/Groups/Groups.tsx","pages/Groups/BachelorGroups.ts","pages/Cards/GroupsCards.tsx","pages/Groups/Bachelor.tsx","pages/Groups/MasterGroups.ts","pages/Groups/Master.tsx","pages/Cards/BotsCards.tsx","pages/Bots/Bots.tsx","pages/Bots/botsNames.ts","pages/Home/Home.tsx","pages/Base.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","TopNavbar","props","_jsxs","className","children","_jsx","Link","to","page","htmlFor","onChange","input","setSearchInput","target","value","channelsNames","ChannelsCards","href","link","src","picture","alt","concat","title","isSearch","ranking","description","subscribers","Channels","channelsArray","setChannelsArray","useState","loading","setLoading","promises","tmpArray","compare","a","b","useEffect","forEach","channel","push","async","channelName","newChannelEntry","pictureURL","first","fetch","API","res","json","data","result","photo","big_file_id","d","file_path","second","all","getData","sort","catch","err","console","log","_Fragment","process","index","toLowerCase","includes","searchInput","Groups","IonGrid","IonRow","IonCol","IonCard","IonCardHeader","IonCardTitle","FIRST_YEAR","SECOND_YEAR","THIRD_YEAR","groupsNames","year","names","error","GroupsCards","members","mzcode","Bachelor","firstYearGroupsArray","setFirstYearGroupsArray","secondYearGroupsArray","setSecondYearGroupsArray","thirdYearGroupsArray","setThirdYearGroupsArray","firstYearGroupsTmpArray","secondYearGroupsTmpArray","thirdYearGroupsTmpArray","arrays","array","sectionTitle","groupName","newGroupEntry","request","tmpLink","substring","length","image_link","tmpPic","tmpMembers","members_number","split","parseInt","group","specificArray","position","FIRST_YEAR_MASTER","SECOND_YEAR_MASTER","Master","encodeURI","BotsCards","Bots","botsArray","setBotsArray","botsNames","bot","botName","newBotEntry","group_name","bots","Home","Base","IonPage","IonContent","fullscreen","scrollY","App","IonApp","IonReactHashRouter","IonRouterOutlet","Route","exact","path","Redirect","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"+JAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,4BAA6B,CAC5B,GACA,IAED,uBAAwB,CACvB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,mCAAoC,CACnC,GACA,IAED,uBAAwB,CACvB,GACA,IAED,+BAAgC,CAC/B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,yBAA0B,CACzB,GACA,IAED,wBAAyB,CACxB,GACA,IAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,IAED,yBAA0B,CACzB,GACA,GAED,8BAA+B,CAC9B,GACA,IAED,yBAA0B,CACzB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,2BAA4B,CAC3B,GACA,IAED,+BAAgC,CAC/B,GACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,IAGD,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,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","file":"static/js/main.2f1324bc.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t71,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t72,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t73,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t74,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t75,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t76,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t77,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t78,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t79,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t80,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t81,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t82,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t83,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t84,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t85,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t86,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t87,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t88,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t89,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t90,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t91,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t92,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t93,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t94,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t95,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t96,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t97,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t98,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t99,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t100,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t101,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t102,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t103,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t104,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t105,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t106,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t107,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t108,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t109,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t110,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t111,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t112,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t113,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 43;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t114,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 45;\nmodule.exports = webpackAsyncContext;","import { Link } from 'react-router-dom';\nimport './TopNavbar.scss';\n\ninterface TopNavbarProps {\n  page: string;\n  setSearchInput: (input: string) => void;\n}\n\nconst TopNavbar: React.FC<TopNavbarProps> = (props: TopNavbarProps) => {\n  return (\n    <div className='navbar'>\n      <div className='links'>\n        <Link to='/home'>Home</Link>\n        <Link to='/channels'>Classifica Canali UNICT</Link>\n        <Link to='/groups'>Classifica Gruppi DMI UNICT</Link>\n        <Link to='/bots'>Bots UNICT</Link>\n      </div>\n      {props.page !== 'home' && props.page !== 'groups' ? (\n        <form>\n          <label htmlFor='search'>Filter: </label>\n          <input id='search' onChange={(input) => props.setSearchInput(input.target.value)}></input>\n        </form>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TopNavbar;\n","const channelsNames: string[] = [\n  'dminews',\n  'fisicact',\n  'dieeinews',\n  'deinews',\n  'infoDSC',\n  'lexunictnews',\n  'biogeonews',\n  'biometecnews',\n  'dspsnews',\n  'disumnews',\n  'medicina_unict',\n  'disfornews',\n  'medclinnews',\n  'dgfinews',\n  'dsfnews',\n  'sdslinguenews',\n  'dicarnews',\n  'ersunews',\n  'bio_unict',\n  'geo_unict',\n  'scienze_ambientali',\n  'terapia_unict',\n  'Servizio_Sociale_Sociologia_news',\n  'lettere_unict',\n  'filosofia_unict',\n  'IngInfoNews',\n  'IngEleNews',\n  'IngIndNews',\n  'Spotted_DMI',\n  'SfottedDIEEI',\n];\nexport default channelsNames;\n","import './Cards.scss';\n\ninterface ChannelsProps {\n  link: string;\n  title: string;\n  description: string;\n  picture: string;\n  isSearch: boolean;\n  ranking: number;\n  subscribers: number;\n}\n\nconst ChannelsCards: React.FC<ChannelsProps> = (props: ChannelsProps) => {\n  return (\n    <div className='cards' key={props.title}>\n      <ul className='all-cards-contents'>\n        <div className='images-and-rankings'>\n          <a className='images' href={props.link}>\n            <img src={props.picture} alt={`${props.title}`} />\n          </a>\n          <h2 className='rankings'>{props.isSearch ? '' : `${props.ranking}°`}</h2>\n        </div>\n        <a className='links' href={props.link}>\n          <h1>{props.title}</h1>\n        </a>\n        <p className='descriptions'>{props.description}</p>\n        <p className='subscribers'>Subscribers: {props.subscribers}</p>\n      </ul>\n    </div>\n  );\n};\n\nexport default ChannelsCards;\n","import { useEffect, useState } from 'react';\nimport channelsNames from './channelsNames';\nimport ChannelsCards from '../Cards/ChannelsCards';\n\ninterface ChannelProps {\n  API: string;\n  searchInput: string;\n}\n\ninterface ChannelEntry {\n  title: string;\n  link: string;\n  description: string;\n  pictureURL: string;\n  subscribers: number;\n}\n\nconst Channels: React.FC<ChannelProps> = (props: ChannelProps) => {\n  const [channelsArray, setChannelsArray] = useState<ChannelEntry[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const promises: Promise<void>[] = [];\n  const tmpArray: ChannelEntry[] = [];\n\n  async function getData(channelName: string): Promise<void> {\n    const newChannelEntry: ChannelEntry = {\n      title: '',\n      link: '',\n      description: '',\n      pictureURL: '',\n      subscribers: 0,\n    };\n\n    const first = fetch(`${props.API}api.telegram.php?chat=${channelName}`)\n      .then((res) => res.json())\n      .then((data) => {\n        newChannelEntry.title = data.result.title;\n        newChannelEntry.link = `https://t.me/${channelName}`;\n        newChannelEntry.description = data.result.description ? data.result.description : '';\n        return fetch(\n          `${props.API}api.telegram.php?file=${data.result.photo.big_file_id as string}`\n        );\n      })\n      .then((res) => res.json())\n      .then((d) => {\n        newChannelEntry.pictureURL = `${props.API}api.telegram.php?path=${\n          d.result.file_path as string\n        }`;\n      });\n\n    const second = fetch(`${props.API}api.telegram.php?count=${channelName}`)\n      .then((res) => res.json())\n      .then((data) => {\n        newChannelEntry.subscribers = data.result;\n      });\n\n    await Promise.all([first, second]).then(() => tmpArray.push(newChannelEntry));\n  }\n\n  function compare(a: ChannelEntry, b: ChannelEntry): number {\n    if (a.subscribers < b.subscribers) return 1;\n    if (a.subscribers > b.subscribers) return -1;\n    return 0;\n  }\n\n  useEffect(() => {\n    channelsNames.forEach((channel) => {\n      promises.push(getData(channel));\n    });\n\n    Promise.all(promises)\n      .then(() => {\n        tmpArray.sort(compare);\n        setChannelsArray(tmpArray);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <img src={process.env.PUBLIC_URL + '/loading.gif'} className='loading' alt='loading' />\n      ) : (\n        <div className='contents-grid'>\n          {channelsArray.map(\n            (channel, index) =>\n              channel.title.toLowerCase().includes(props.searchInput.toLowerCase()) && (\n                <ChannelsCards\n                  ranking={index + 1}\n                  isSearch={props.searchInput !== ''}\n                  title={channel.title}\n                  link={channel.link}\n                  description={channel.description}\n                  picture={channel.pictureURL}\n                  subscribers={channel.subscribers}\n                />\n              )\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Channels;\n","import { IonCard, IonCardHeader, IonCardTitle, IonCol, IonGrid, IonRow } from '@ionic/react';\nimport { Link } from 'react-router-dom';\nimport './Groups.scss';\n\nconst Groups: React.FC = () => (\n  <IonGrid>\n    <IonRow>\n      <IonCol>\n        <Link to='/groups/bachelor' className='link'>\n          <IonCard className='card'>\n            <IonCardHeader>\n              <IonCardTitle className='card-title'>Triennale</IonCardTitle>\n            </IonCardHeader>\n          </IonCard>\n        </Link>\n      </IonCol>\n      <IonCol>\n        <Link to='/groups/master' className='link'>\n          <IonCard className='card'>\n            <IonCardHeader>\n              <IonCardTitle className='card-title'>Magistrale</IonCardTitle>\n            </IonCardHeader>\n          </IonCard>\n        </Link>\n      </IonCol>\n    </IonRow>\n  </IonGrid>\n);\n\nexport default Groups;\n","export const FIRST_YEAR: string = 'PRIMO_ANNO';\nexport const SECOND_YEAR: string = 'SECONDO_ANNO';\nexport const THIRD_YEAR: string = 'TERZO_ANNO';\nexport const API: string =\n  'https://seminaraluigi.altervista.org/list-telegram-groups/mid.php?path=GRUPPI/';\n\nexport async function groupsNames(year: string): Promise<string[]> {\n  return fetch(`${API}${year}.json`)\n    .then(res => res.json())\n    .then(data => {\n      return data.names as string[];\n    })\n    .catch(err => {\n      console.error(err);\n      return [];\n    });\n}\n","import './Cards.scss';\n\ninterface GroupsProps {\n  link: string;\n  title: string;\n  description: string;\n  picture: string;\n  isSearch: boolean;\n  ranking: number;\n  members: number;\n  mzcode: string;\n  code: string;\n}\n\nconst GroupsCards: React.FC<GroupsProps> = (props: GroupsProps) => {\n  return (\n    <div className='cards' key={props.title}>\n      <ul className='all-cards-contents'>\n        <div className='images-and-rankings'>\n          <a className='images' href={props.link}>\n            <img src={props.picture} alt={`${props.title}`} />\n          </a>\n          <h2 className='rankings'>{props.isSearch ? '' : `${props.ranking}°`}</h2>\n        </div>\n        <a className='links' href={props.link}>\n          <h1>{props.title}</h1>\n        </a>\n        <p className='descriptions'>{props.description}</p>\n        <p className='members'>Members: {props.members}</p>\n        {props.mzcode !== '' ? (\n          <div>\n            <p className='team'>\n              Codice Teams A-L: <b className='code'>{props.code}</b>\n            </p>\n            <p className='team'>\n              Codice Teams M-Z: <b className='code'>{props.mzcode}</b>\n            </p>\n          </div>\n        ) : props.code !== '' ? (\n          <p className='team'>\n            Codice Teams: <b className='code'>{props.code}</b>\n          </p>\n        ) : null}\n      </ul>\n    </div>\n  );\n};\n\nexport default GroupsCards;\n","import { useEffect, useState } from 'react';\nimport { FIRST_YEAR, SECOND_YEAR, THIRD_YEAR, groupsNames } from './BachelorGroups';\nimport GroupsCards from '../Cards/GroupsCards';\n\ninterface BachelorProps {\n  API: string;\n  searchInput: string;\n}\n\ninterface GroupEntry {\n  title: string;\n  link: string;\n  description: string;\n  pictureURL: string;\n  members: number;\n  code: string;\n  mzcode: string;\n}\n\ninterface ArrayEntry {\n  array: GroupEntry[];\n  sectionTitle: string;\n}\n\nconst Bachelor: React.FC<BachelorProps> = (props: BachelorProps) => {\n  const [firstYearGroupsArray, setFirstYearGroupsArray] = useState<GroupEntry[]>([]);\n  const [secondYearGroupsArray, setSecondYearGroupsArray] = useState<GroupEntry[]>([]);\n  const [thirdYearGroupsArray, setThirdYearGroupsArray] = useState<GroupEntry[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const promises: Promise<void>[] = [];\n  const firstYearGroupsTmpArray: GroupEntry[] = [];\n  const secondYearGroupsTmpArray: GroupEntry[] = [];\n  const thirdYearGroupsTmpArray: GroupEntry[] = [];\n\n  const arrays: ArrayEntry[] = [\n    { array: firstYearGroupsArray, sectionTitle: 'Primo Anno' },\n    { array: secondYearGroupsArray, sectionTitle: 'Secondo Anno' },\n    { array: thirdYearGroupsArray, sectionTitle: 'Terzo Anno' },\n  ];\n\n  async function getData(year: string, groupName: string): Promise<void> {\n    const newGroupEntry: GroupEntry = {\n      title: '',\n      link: '',\n      description: '',\n      pictureURL: '',\n      members: 0,\n      code: '',\n      mzcode: '',\n    };\n\n    const request = fetch(`${props.API}mid.php?path=GRUPPI/${year}/${groupName}.json`)\n      .then((res) => res.json())\n      .then((data) => {\n        const tmpLink: string = data.link;\n        newGroupEntry.title = groupName;\n        newGroupEntry.link = tmpLink.substring(1, tmpLink.length - 1);\n        newGroupEntry.description = data.description;\n\n        if (data.image_link === '') {\n          newGroupEntry.pictureURL = process.env.PUBLIC_URL + '/telegram.svg';\n        } else {\n          const tmpPic: string = data.image_link;\n          newGroupEntry.pictureURL = tmpPic.substring(1);\n        }\n\n        const tmpMembers: string[] = (data.members_number as string).split(' ');\n        newGroupEntry.members = parseInt(tmpMembers[0], 10);\n        newGroupEntry.code = data.code;\n        newGroupEntry.mzcode = data.mzcode;\n      });\n\n    await Promise.resolve(request).then(() => {\n      if (year === FIRST_YEAR) {\n        firstYearGroupsTmpArray.push(newGroupEntry);\n      } else if (year === SECOND_YEAR) {\n        secondYearGroupsTmpArray.push(newGroupEntry);\n      } else {\n        thirdYearGroupsTmpArray.push(newGroupEntry);\n      }\n    });\n  }\n\n  function compare(a: GroupEntry, b: GroupEntry): number {\n    if (a.members < b.members) return 1;\n    if (a.members > b.members) return -1;\n    return 0;\n  }\n\n  useEffect(() => {\n    (async () => {\n      (await groupsNames(FIRST_YEAR)).forEach((group) => {\n        promises.push(getData(FIRST_YEAR, group));\n      });\n\n      (await groupsNames(SECOND_YEAR)).forEach((group) => {\n        promises.push(getData(SECOND_YEAR, group));\n      });\n\n      (await groupsNames(THIRD_YEAR)).forEach((group) => {\n        promises.push(getData(THIRD_YEAR, group));\n      });\n\n      return Promise.all(promises);\n    })()\n      .then(() => {\n        firstYearGroupsTmpArray.sort(compare);\n        secondYearGroupsTmpArray.sort(compare);\n        thirdYearGroupsTmpArray.sort(compare);\n        setFirstYearGroupsArray(firstYearGroupsTmpArray);\n        setSecondYearGroupsArray(secondYearGroupsTmpArray);\n        setThirdYearGroupsArray(thirdYearGroupsTmpArray);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <img\n          src={process.env.PUBLIC_URL + '/loading.gif'}\n          className='loading'\n          key='loading'\n          alt='loading'\n        />\n      ) : (\n        <div>\n          {arrays.map((specificArray) => (\n            <div key={specificArray.sectionTitle}>\n              <h2 className='years-sections-title'>{specificArray.sectionTitle}</h2>\n              <div className='contents-grid'>\n                {specificArray.array.map(\n                  (group, position) =>\n                    group.title.toLowerCase().includes(props.searchInput.toLowerCase()) && (\n                      <GroupsCards\n                        ranking={position + 1}\n                        isSearch={props.searchInput !== ''}\n                        title={group.title}\n                        link={group.link}\n                        description={group.description}\n                        picture={group.pictureURL}\n                        members={group.members}\n                        code={group.code}\n                        mzcode={group.mzcode}\n                      />\n                    )\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Bachelor;\n","export const FIRST_YEAR_MASTER: string = 'PRIMO_ANNO_MAGISTRALE';\nexport const SECOND_YEAR_MASTER: string = 'SECONDO_ANNO_MAGISTRALE';\nexport const API: string =\n  'https://seminaraluigi.altervista.org/list-telegram-groups/mid.php?path=GRUPPI/';\n\nexport async function groupsNames(year: string): Promise<string[]> {\n  return fetch(`${API}${year}.json`)\n    .then(res => res.json())\n    .then(data => {\n      return data.names as string[];\n    })\n    .catch(err => {\n      console.error(err);\n      return [];\n    });\n}\n","import { useEffect, useState } from 'react';\nimport { FIRST_YEAR_MASTER, SECOND_YEAR_MASTER, groupsNames } from './MasterGroups';\nimport GroupsCards from '../Cards/GroupsCards';\n\ninterface MasterProps {\n  API: string;\n  searchInput: string;\n}\n\ninterface GroupEntry {\n  title: string;\n  link: string;\n  description: string;\n  pictureURL: string;\n  members: number;\n  code: string;\n}\n\ninterface ArrayEntry {\n  array: GroupEntry[];\n  sectionTitle: string;\n}\n\nconst Master: React.FC<MasterProps> = (props: MasterProps) => {\n  const [firstYearGroupsArray, setFirstYearGroupsArray] = useState<GroupEntry[]>([]);\n  const [secondYearGroupsArray, setSecondYearGroupsArray] = useState<GroupEntry[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const promises: Promise<void>[] = [];\n  const firstYearGroupsTmpArray: GroupEntry[] = [];\n  const secondYearGroupsTmpArray: GroupEntry[] = [];\n\n  const arrays: ArrayEntry[] = [\n    { array: firstYearGroupsArray, sectionTitle: 'Primo Anno' },\n    { array: secondYearGroupsArray, sectionTitle: 'Secondo Anno' },\n  ];\n\n  async function getData(year: string, groupName: string): Promise<void> {\n    const newGroupEntry: GroupEntry = {\n      title: '',\n      link: '',\n      description: '',\n      pictureURL: '',\n      members: 0,\n      code: '',\n    };\n\n    const request = fetch(encodeURI(`${props.API}mid.php?path=GRUPPI/${year}/${groupName}.json`))\n      .then((res) => res.json())\n      .then((data) => {\n        const tmpLink: string = data.link;\n        newGroupEntry.title = groupName;\n        newGroupEntry.link = tmpLink.substring(1, tmpLink.length - 1);\n        newGroupEntry.description = data.description;\n\n        if (data.image_link === '') {\n          newGroupEntry.pictureURL = process.env.PUBLIC_URL + '/telegram.svg';\n        } else {\n          const tmpPic: string = data.image_link;\n          newGroupEntry.pictureURL = tmpPic.substring(1);\n        }\n\n        const tmpMembers: string[] = (data.members_number as string).split(' ');\n        newGroupEntry.members = parseInt(tmpMembers[0], 10);\n        newGroupEntry.code = data.code;\n      });\n\n    await Promise.resolve(request).then(() => {\n      if (year === FIRST_YEAR_MASTER) {\n        firstYearGroupsTmpArray.push(newGroupEntry);\n      } else {\n        secondYearGroupsTmpArray.push(newGroupEntry);\n      }\n    });\n  }\n\n  function compare(a: GroupEntry, b: GroupEntry): number {\n    if (a.members < b.members) return 1;\n    if (a.members > b.members) return -1;\n    return 0;\n  }\n\n  useEffect(() => {\n    (async () => {\n      (await groupsNames(FIRST_YEAR_MASTER)).forEach((group) => {\n        promises.push(getData(FIRST_YEAR_MASTER, group));\n      });\n      (await groupsNames(SECOND_YEAR_MASTER)).forEach((group) => {\n        promises.push(getData(SECOND_YEAR_MASTER, group));\n      });\n\n      return Promise.all(promises);\n    })()\n      .then(() => {\n        firstYearGroupsTmpArray.sort(compare);\n        secondYearGroupsTmpArray.sort(compare);\n        setFirstYearGroupsArray(firstYearGroupsTmpArray);\n        setSecondYearGroupsArray(secondYearGroupsTmpArray);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <img\n          src={process.env.PUBLIC_URL + '/loading.gif'}\n          className='loading'\n          key='loading'\n          alt='loading'\n        />\n      ) : (\n        <div>\n          {arrays.map((specificArray) => (\n            <div key={specificArray.sectionTitle}>\n              <h2 className='years-sections-title'>{specificArray.sectionTitle}</h2>\n              <div className='contents-grid'>\n                {specificArray.array.map(\n                  (group, position) =>\n                    group.title.toLowerCase().includes(props.searchInput.toLowerCase()) && (\n                      <GroupsCards\n                        ranking={position + 1}\n                        isSearch={props.searchInput !== ''}\n                        title={group.title}\n                        link={group.link}\n                        description={group.description}\n                        picture={group.pictureURL}\n                        members={group.members}\n                        code={group.code}\n                        mzcode=''\n                      />\n                    )\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Master;\n","import './Cards.scss';\n\ninterface BotsProps {\n  link: string;\n  title: string;\n  description: string;\n  picture: string;\n}\n\nconst BotsCards: React.FC<BotsProps> = (props: BotsProps) => {\n  return (\n    <div className='cards' key={props.title}>\n      <ul className='all-cards-contents'>\n        <img className='images' src={props.picture} alt={`${props.title}`} />\n        <a className='links' href={props.link}>\n          <h1>{props.title}</h1>\n        </a>\n        <p className='descriptions'>{props.description}</p>\n      </ul>\n    </div>\n  );\n};\n\nexport default BotsCards;\n","import { useEffect, useState } from 'react';\nimport botsNames from './botsNames';\nimport BotsCards from '../Cards/BotsCards';\n\ninterface BotsProps {\n  API: string;\n  searchInput: string;\n}\n\ninterface BotEntry {\n  link: string;\n  title: string;\n  description: string;\n  pictureURL: string;\n}\n\nconst Bots: React.FC<BotsProps> = (props: BotsProps) => {\n  const [botsArray, setBotsArray] = useState<BotEntry[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const promises: Promise<void>[] = [];\n  const tmpArray: BotEntry[] = [];\n\n  async function getData(botName: string): Promise<void> {\n    const newBotEntry: BotEntry = {\n      title: '',\n      link: '',\n      description: '',\n      pictureURL: '',\n    };\n\n    const request = fetch(`${props.API}mid.php?path=GRUPPI/BOT/${botName}.json`)\n      .then((res) => res.json())\n      .then((data) => {\n        newBotEntry.title = data.group_name as string;\n        const tmpLink: string = data.link;\n        newBotEntry.link = tmpLink.substring(1, tmpLink.length - 1);\n        newBotEntry.description = data.description;\n        const tmpPic: string = data.image_link;\n        newBotEntry.pictureURL = tmpPic.substring(1);\n      });\n\n    await Promise.resolve(request).then(() => {\n      tmpArray.push(newBotEntry);\n    });\n  }\n\n  function compare(a: BotEntry, b: BotEntry): number {\n    if (a.title < b.title) return -1;\n    if (a.title > b.title) return 1;\n    return 0;\n  }\n\n  useEffect(() => {\n    (async () => {\n      (await botsNames()).forEach((bot) => {\n        promises.push(getData(bot));\n      });\n\n      return Promise.all(promises);\n    })()\n      .then(() => {\n        tmpArray.sort(compare);\n        setBotsArray(tmpArray);\n        setLoading(false);\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <img\n          src={process.env.PUBLIC_URL + '/loading.gif'}\n          className='loading'\n          key='loading'\n          alt='loading'\n        />\n      ) : (\n        <div className='contents-grid'>\n          {botsArray.map(\n            (bots) =>\n              bots.title.toLowerCase().includes(props.searchInput.toLowerCase()) && (\n                <BotsCards\n                  title={bots.title}\n                  link={bots.link}\n                  description={bots.description}\n                  picture={bots.pictureURL}\n                />\n              )\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Bots;\n","const API: string =\n  'https://seminaraluigi.altervista.org/list-telegram-groups/mid.php?path=GRUPPI/BOT';\n\nexport default async function botsNames(): Promise<string[]> {\n  return fetch(`${API}.json`)\n    .then(res => res.json())\n    .then(data => {\n      return data.names as string[];\n    })\n    .catch(err => {\n      console.error(err);\n      return [];\n    });\n}\n","import { IonCard, IonCardHeader, IonCardTitle, IonCol, IonGrid, IonRow } from '@ionic/react';\nimport { Link } from 'react-router-dom';\nimport './Home.scss';\n\nconst Home: React.FC = () => (\n  <IonGrid>\n    <IonRow>\n      <IonCol>\n        <Link to='/channels' className='link'>\n          <IonCard className='card'>\n            <IonCardHeader>\n              <IonCardTitle className='card-title'>Canali</IonCardTitle>\n            </IonCardHeader>\n          </IonCard>\n        </Link>\n      </IonCol>\n      <IonCol>\n        <Link to='/groups' className='link'>\n          <IonCard className='card'>\n            <IonCardHeader>\n              <IonCardTitle className='card-title'>Gruppi</IonCardTitle>\n            </IonCardHeader>\n          </IonCard>\n        </Link>\n      </IonCol>\n    </IonRow>\n  </IonGrid>\n);\n\nexport default Home;\n","import { IonContent, IonPage } from '@ionic/react';\nimport { useState } from 'react';\n\nimport TopNavbar from './TopNavbar';\nimport Channels from './Channels/Channels';\nimport Groups from './Groups/Groups';\nimport Bachelor from './Groups/Bachelor';\nimport Master from './Groups/Master';\nimport Bots from './Bots/Bots';\nimport Home from './Home/Home';\n\nimport './Base.scss';\n\ninterface BaseProps {\n  page: string;\n}\n\nconst Base: React.FC<BaseProps> = (props: BaseProps) => {\n  const [searchInput, setSearchInput] = useState<string>('');\n\n  const API: string = 'https://seminaraluigi.altervista.org/list-telegram-groups/';\n\n  function scrollingEnabled(): boolean {\n    if (props.page === 'home' || props.page === 'groups') return false;\n    return true;\n  }\n\n  return (\n    <IonPage>\n      <IonContent fullscreen scrollY={scrollingEnabled()}>\n        <div className='base'>\n          <TopNavbar page={props.page} setSearchInput={setSearchInput} />\n          <div className='content'>\n            {props.page === 'home' ? (\n              <Home />\n            ) : props.page === 'channels' ? (\n              <Channels API={API} searchInput={searchInput} />\n            ) : props.page === 'groups' ? (\n              <Groups />\n            ) : props.page === 'bachelor' ? (\n              <Bachelor API={API} searchInput={searchInput} />\n            ) : props.page === 'master' ? (\n              <Master API={API} searchInput={searchInput} />\n            ) : props.page === 'bots' ? (\n              <Bots API={API} searchInput={searchInput} />\n            ) : (\n              <Home />\n            )}\n          </div>\n          <div className='credits'>\n            Coded by\n            <a href='https://github.com/Lorenzo-Pappalardo'>Lorenzo Pappalardo</a>\n            <a href='https://github.com/Helias'>Stefano Borzì</a>\n            <a href='https://github.com/Gigi-G'>Luigi Seminara</a>\n          </div>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Base;\n","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactHashRouter } from '@ionic/react-router';\nimport Base from './pages/Base';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactHashRouter>\n      <IonRouterOutlet>\n        <Route exact path='/home'>\n          <Base page='home' />\n        </Route>\n        <Route exact path='/channels'>\n          <Base page='channels' />\n        </Route>\n        <Route exact path='/groups'>\n          <Base page='groups' />\n        </Route>\n        <Route exact path='/groups/bachelor'>\n          <Base page='bachelor' />\n        </Route>\n        <Route exact path='/groups/master'>\n          <Base page='master' />\n        </Route>\n        <Route exact path='/bots'>\n          <Base page='bots' />\n        </Route>\n        <Route>\n          <Redirect to='/home' />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactHashRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}